"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./components/AppData/articles.ts":
/*!****************************************!*\
  !*** ./components/AppData/articles.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst ARTICLE_DATA = [\n    {\n        title: \"Understanding and fixing N+1 query in Ruby on Rails\",\n        type: [\n            \"article\"\n        ],\n        text: \"Regarding backend performance, there is a performance issue that everybody has heard about at least once: N+1 query. The N+1 query problem happens when your code executes N additional query statements to fetch the same data that could have been retrieved when executing the primary query. When it comes to understanding and fixing N+1 queries in the context of Ruby on Rails, it refers to the process of identifying and resolving a common performance issue in database queries. An N+1 query occurs when a database query is made within a loop, resulting in N+1 individual queries being executed. This can lead to inefficient database access and slow down the application`s performance. In the context of Ruby on Rails, this issue can be addressed by using techniques such as eager loading, which allows related data to be loaded in advance, reducing the number of database queries. Additionally, caching and optimizing database indexes can also help improve query performance. To fix N+1 queries in Ruby on Rails, developers can use tools like ActiveRecord`s includes method to preload associations and minimize the number of database queries. They can also use tools like Bullet gem to detect and address N+1 query issues. Let`s say we have a blog application with two models: Post and Comment. Each post has multiple comments associated with it. Now, suppose we want to display a list of posts along with the number of comments for each post.\"\n    }\n];\n/* harmony default export */ __webpack_exports__[\"default\"] = (ARTICLE_DATA);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0FwcERhdGEvYXJ0aWNsZXMudHMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGVBQWU7SUFDbkI7UUFDRUMsT0FBTztRQUNQQyxNQUFNO1lBQUM7U0FBVTtRQUNqQkMsTUFBTTtJQUNSO0NBQ0Q7QUFFRCwrREFBZUgsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0FwcERhdGEvYXJ0aWNsZXMudHM/MGQ2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUlRJQ0xFX0RBVEEgPSBbXG4gIHtcbiAgICB0aXRsZTogJ1VuZGVyc3RhbmRpbmcgYW5kIGZpeGluZyBOKzEgcXVlcnkgaW4gUnVieSBvbiBSYWlscycsXG4gICAgdHlwZTogWydhcnRpY2xlJ10sXG4gICAgdGV4dDogJ1JlZ2FyZGluZyBiYWNrZW5kIHBlcmZvcm1hbmNlLCB0aGVyZSBpcyBhIHBlcmZvcm1hbmNlIGlzc3VlIHRoYXQgZXZlcnlib2R5IGhhcyBoZWFyZCBhYm91dCBhdCBsZWFzdCBvbmNlOiBOKzEgcXVlcnkuIFRoZSBOKzEgcXVlcnkgcHJvYmxlbSBoYXBwZW5zIHdoZW4geW91ciBjb2RlIGV4ZWN1dGVzIE4gYWRkaXRpb25hbCBxdWVyeSBzdGF0ZW1lbnRzIHRvIGZldGNoIHRoZSBzYW1lIGRhdGEgdGhhdCBjb3VsZCBoYXZlIGJlZW4gcmV0cmlldmVkIHdoZW4gZXhlY3V0aW5nIHRoZSBwcmltYXJ5IHF1ZXJ5LiBXaGVuIGl0IGNvbWVzIHRvIHVuZGVyc3RhbmRpbmcgYW5kIGZpeGluZyBOKzEgcXVlcmllcyBpbiB0aGUgY29udGV4dCBvZiBSdWJ5IG9uIFJhaWxzLCBpdCByZWZlcnMgdG8gdGhlIHByb2Nlc3Mgb2YgaWRlbnRpZnlpbmcgYW5kIHJlc29sdmluZyBhIGNvbW1vbiBwZXJmb3JtYW5jZSBpc3N1ZSBpbiBkYXRhYmFzZSBxdWVyaWVzLiBBbiBOKzEgcXVlcnkgb2NjdXJzIHdoZW4gYSBkYXRhYmFzZSBxdWVyeSBpcyBtYWRlIHdpdGhpbiBhIGxvb3AsIHJlc3VsdGluZyBpbiBOKzEgaW5kaXZpZHVhbCBxdWVyaWVzIGJlaW5nIGV4ZWN1dGVkLiBUaGlzIGNhbiBsZWFkIHRvIGluZWZmaWNpZW50IGRhdGFiYXNlIGFjY2VzcyBhbmQgc2xvdyBkb3duIHRoZSBhcHBsaWNhdGlvbmBzIHBlcmZvcm1hbmNlLiBJbiB0aGUgY29udGV4dCBvZiBSdWJ5IG9uIFJhaWxzLCB0aGlzIGlzc3VlIGNhbiBiZSBhZGRyZXNzZWQgYnkgdXNpbmcgdGVjaG5pcXVlcyBzdWNoIGFzIGVhZ2VyIGxvYWRpbmcsIHdoaWNoIGFsbG93cyByZWxhdGVkIGRhdGEgdG8gYmUgbG9hZGVkIGluIGFkdmFuY2UsIHJlZHVjaW5nIHRoZSBudW1iZXIgb2YgZGF0YWJhc2UgcXVlcmllcy4gQWRkaXRpb25hbGx5LCBjYWNoaW5nIGFuZCBvcHRpbWl6aW5nIGRhdGFiYXNlIGluZGV4ZXMgY2FuIGFsc28gaGVscCBpbXByb3ZlIHF1ZXJ5IHBlcmZvcm1hbmNlLiBUbyBmaXggTisxIHF1ZXJpZXMgaW4gUnVieSBvbiBSYWlscywgZGV2ZWxvcGVycyBjYW4gdXNlIHRvb2xzIGxpa2UgQWN0aXZlUmVjb3JkYHMgaW5jbHVkZXMgbWV0aG9kIHRvIHByZWxvYWQgYXNzb2NpYXRpb25zIGFuZCBtaW5pbWl6ZSB0aGUgbnVtYmVyIG9mIGRhdGFiYXNlIHF1ZXJpZXMuIFRoZXkgY2FuIGFsc28gdXNlIHRvb2xzIGxpa2UgQnVsbGV0IGdlbSB0byBkZXRlY3QgYW5kIGFkZHJlc3MgTisxIHF1ZXJ5IGlzc3Vlcy4gTGV0YHMgc2F5IHdlIGhhdmUgYSBibG9nIGFwcGxpY2F0aW9uIHdpdGggdHdvIG1vZGVsczogUG9zdCBhbmQgQ29tbWVudC4gRWFjaCBwb3N0IGhhcyBtdWx0aXBsZSBjb21tZW50cyBhc3NvY2lhdGVkIHdpdGggaXQuIE5vdywgc3VwcG9zZSB3ZSB3YW50IHRvIGRpc3BsYXkgYSBsaXN0IG9mIHBvc3RzIGFsb25nIHdpdGggdGhlIG51bWJlciBvZiBjb21tZW50cyBmb3IgZWFjaCBwb3N0LidcbiAgfSxcbl07XG5cbmV4cG9ydCBkZWZhdWx0IEFSVElDTEVfREFUQTtcbiJdLCJuYW1lcyI6WyJBUlRJQ0xFX0RBVEEiLCJ0aXRsZSIsInR5cGUiLCJ0ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/AppData/articles.ts\n"));

/***/ })

});